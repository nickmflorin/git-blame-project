[tox]
isolated_build = true
skip_missing_interpreters = true
parallel_show_output = true
envlist = py39

[testenv]
skip_install = true
whitelist_externals =
  poetry
  rm
  pip
  mkdir
setenv =
    PYTHONHASHSEED=0
    PYTHONPATH={toxinidir}
    PYTHONBREAKPOINT=ipdb.set_trace
commands =
    {[testenv:test]commands}

[testenv:clean]
description = Clean all build and test directories, as well as extraneous artifacts.
skipsdist = true
skip_install = true
deps =
whitelist_externals =
    rm
    find
commands =
    rm -rf \
        {toxinidir}/reports \
        {toxinidir}/build \
        {toxinidir}/pip-wheel-metadata \
        {toxinidir}/docs/_build \
        {toxinidir}/src/git-blame-project.egg-info \
        {toxinidir}/.pytest_cache \
        {toxinidir}/.tox
    find {toxinidir} -name "*.pyc" -delete
    find {toxinidir} -type d -name __pycache__ -delete

[testenv:lint]
description = Run flake8 linting checks.
envdir = {toxworkdir}/py39
whitelist_externals =
    rm
    poetry
    pip
    mkdir
commands =
    rm -rf {toxinidir}/pip-wheel-metadata
    pip install pip==21.3.1
    poetry install -v
    mkdir -p {toxinidir}/reports
    poetry run flake8 {posargs:src/git_blame_project}
    poetry run flake8 {posargs:tests}
    poetry run pylint {posargs:src/git_blame_project}
    poetry run pylint {posargs:tests}

[testenv:py39]
commands =
    {[testenv:test]commands}
